%h2
  =t(:events).mb_chars.upcase + ':'
- @events.each do |event|
  #events-container
    %h3
      - if !event.closed.blank?
        = link_to event.title + " (Closed!!!)"
      - else
        = link_to event.title, event.id.to_s
    %h5
      = t(:date_text) + ':  ' + event.start.strftime("%d.%m.%Y") # Inline date for compact out
    %h5
      = t(:description) + ':'
    =event.description
    -if event.user_id == current_user.id # User can't take photo himself.
      %h5
        = t(:recalls)  + ':' + event.messages.count.to_s # Count messages sent on this event
    -else
      - if event.messages.where("user_id = ?", current_user.id).count > 0 # Count message for photographer then looking user page
        %p
          = link_to t(:go_to_conversaion),
            '/conversations/' + event.messages.where("user_id = ?", current_user.id).first.conversation_id.to_s
      -else
        %p
          %button{:type=> 'button', :class => 'btn btn-large btn-inverse', :id=>'message-btn',
          'data-target'=>'#messageModal_' + event.id.to_s, 'data-toggle' => 'modal'}
            =t :to_photo
      .modal.hide.fade{:id => 'messageModal_' + event.id.to_s}
        = render :partial => 'messages/new_response_to_event', :locals => {:event => event}
